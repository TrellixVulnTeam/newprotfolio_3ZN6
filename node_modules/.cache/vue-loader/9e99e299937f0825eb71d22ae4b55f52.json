{"remainingRequest":"D:\\jungwon\\protfolio\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\jungwon\\protfolio\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\jungwon\\protfolio\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\jungwon\\protfolio\\src\\views\\Home.vue?vue&type=template&id=fae5bece&scoped=true&v-on%3Ascroll.native=handleScroll&","dependencies":[{"path":"D:\\jungwon\\protfolio\\src\\views\\Home.vue","mtime":1607563590899},{"path":"D:\\jungwon\\protfolio\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\jungwon\\protfolio\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\jungwon\\protfolio\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\jungwon\\protfolio\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}