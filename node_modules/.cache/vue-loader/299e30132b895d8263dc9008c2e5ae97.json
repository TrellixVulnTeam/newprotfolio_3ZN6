{"remainingRequest":"D:\\jungwon\\protfolio\\newprotfolio\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\jungwon\\protfolio\\newprotfolio\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\jungwon\\protfolio\\newprotfolio\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\jungwon\\protfolio\\newprotfolio\\src\\views\\Home.vue?vue&type=template&id=fae5bece&scoped=true&","dependencies":[{"path":"D:\\jungwon\\protfolio\\newprotfolio\\src\\views\\Home.vue","mtime":1607667588008},{"path":"D:\\jungwon\\protfolio\\newprotfolio\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\jungwon\\protfolio\\newprotfolio\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\jungwon\\protfolio\\newprotfolio\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\jungwon\\protfolio\\newprotfolio\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}